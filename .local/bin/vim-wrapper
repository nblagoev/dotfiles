#!/usr/bin/env python3
# Opens nvim if available, else vim.
# Adds -p flag to open files in tabs.
# Set $EDITOR to vim-wrapper
# Required as $EDITOR does not support args, and logic for nvim was replicated across bash, fish, zsh.
# also, rgfzf can sometimes pass duplicates if there are multiple matches. It's
# convenient and safe to fix here as it won't affect any sane usage of vim.
from __future__ import print_function
import sys
import os

# useful if FZF (rgfzf etc) returns no results
if len(sys.argv) == 1:
    print("No files to edit")
    sys.exit(1)


def is_exe(fpath):
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)


def which(cmd):
    for path in os.environ["PATH"].split(os.pathsep):
        exe = os.path.join(path, cmd)

        if is_exe(exe):
            return exe


# iterate to preserve order
seen = set()
argv = list()


# rgfzf and vim-fetch allow vim to open files with line numbers in the
# format name:line:col, eg test.py:9:19.
# If multiple lines are matched with the same file, rgfzf will produce a given
# file multiple times. I want vim to open each file only once, with the first
# file opened at the first matching line. Therefore, just the filename part is
# used to calculate the final set of arguments.

for arg in sys.argv[1:]:
    filename = arg.split(":")[0]
    if filename not in seen:
        argv.append(arg)
        seen.add(filename)

cmd_path = which("nvim") or which("vim")

if cmd_path is None:
    print("Neither vim nor nvim found")
    sys.exit(1)

os.execl(cmd_path, os.path.basename(cmd_path), "-p", *argv)
